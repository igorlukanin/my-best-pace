<% extend 'layouts/default.ect' %>

<div class="header">
    <div class="header_logo">
        <span class="header_logo_title">Pace Craze</span> of
        <span class="header_logo_name">Igor Lukanin</span>
    </div>
    <div class="header_tabs">
        <div class="header_tabs_tab">All distances</div>
        <div class="header_tabs_tab">5K<span class="header_tabs_tab_note">19:05</span></div>
        <div class="header_tabs_tab">10K<span class="header_tabs_tab_note">38:22</span></div>
        <div class="header_tabs_tab">HM<span class="header_tabs_tab_note">1:37:09</span></div>
        <div class="header_tabs_tab">M<span class="header_tabs_tab_note">3:42:17</span></div>
    </div>
</div>

<svg id="pace_chart" class="pace_chart"></svg>

<script>
    var t = function(x, y) {
        return 'translate(' + x + ',' + y + ')';
    };

    var g = function(chart, x, y) {
        return chart.append('g').attr('transform', t(x, y));
    };

    var createYAxis = function(options, chart, placement) {
        var x = 'right' == placement ? options.width - options.yAxisAreaWidth : 0,
            group = g(chart, x, 0);

        options.paceRange.forEach(function(pace) {
            group.append('text')
                    .attr('x', options.yAxisAreaWidth / 2)
                    .attr('y', options.y(pace) + options.textHeight / 2)
                    .attr('text-anchor', 'middle')
                    .text(pace + ':00');
        });
    };

    var createYHairlines = function(options, chart) {
        var group = g(chart, options.yAxisAreaWidth, 0);

        options.paceRange.forEach(function(pace) {
            group.append('rect')
                    .attr('x', 0)
                    .attr('y', options.y(pace))
                    .attr('width', options.xAxisAreaWidth)
                    .attr('height', options.thickness)
                    .attr('fill', '#eee');
        });
    };

    var createYAxes = function(options, chart) {
        createYAxis(options, chart, 'left');
        createYAxis(options, chart, 'right');
        createYHairlines(options, chart);
    };

    var createXMonths = function(options, chart) {
        var group = g(chart, options.yAxisAreaWidth, options.height - options.xAxisAreaHeight);

        options.timestampRange.forEach(function(timestamp) {
            var months = [ 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ];
            var month = months[new Date(1000 * timestamp).getUTCMonth()];

            group.append('text')
                    .attr('x', options.x(timestamp))
                    .attr('y', options.textHeight / 2)
                    .attr('text-anchor', 'middle')
                    .text(month);
        });
    };

    var createXYears = function(options, chart) {
        var group = g(chart, options.yAxisAreaWidth, options.height - 0.5 * options.xAxisAreaHeight);

        options.timestampRange.forEach(function(timestamp) {
            var date = new Date(1000 * timestamp);

            if (date.getUTCMonth() == 0) {
                var year = date.getUTCFullYear();

                group.append('text')
                        .attr('x', options.x(timestamp))
                        .attr('y', options.textHeight / 2)
                        .attr('text-anchor', 'middle')
                        .text(year);
            }
        });
    };

    var createXHairlines = function(options, chart) {
        var group = g(chart, options.yAxisAreaWidth, 0),
            offsetRatio = 0.05;

        options.timestampRange.forEach(function(timestamp) {
            var date = new Date(1000 * timestamp);

            if (date.getUTCMonth() == 0) {
                var year = date.getUTCFullYear();

                group.append('rect')
                        .attr('x', options.x(timestamp))
                        .attr('y', options.yAxisAreaHeight * offsetRatio)
                        .attr('width', options.thickness)
                        .attr('height', options.yAxisAreaHeight * (1 - 2 * offsetRatio))
                        .attr('fill', '#eee');
            }
        });
    };

    var createXAxis = function(options, chart) {
        createXMonths(options, chart);
        createXYears(options, chart);
        createXHairlines(options, chart);
    };

    var createVolumeArea = function(options, chart) {
        var group = g(chart, options.yAxisAreaWidth, 0);

        var area = d3.svg.area()
                .x(function(d) { console.log(d); return options.x(d[0]); })
                .y0(function(d) { return options.y(d[1]); })
                .y1(function(d) { return options.y(d[1]) - options.volumeRatio * Math.pow(1.13, d[2]); })
                .interpolate('basis');

        options.periods.forEach(function(period) {
            group.append('path')
                    .attr('d', area(period))
                    .attr('fill', '#ccc');
        });
    };

    var createPaceCurve = function(options, chart) {
        var group = g(chart, options.yAxisAreaWidth, 0);

        var line = d3.svg.line()
                .x(function(d) { console.log(d); return options.x(d[0]); })
                .y(function(d) { return options.y(d[1]); })
                .interpolate('basis');

        options.periods.forEach(function(period) {
            group.append('path')
                    .attr('d', line(period))
                    .attr('stroke-width', options.thicknessRatio * options.thickness)
                    .attr('stroke', '#333')
                    .attr('fill', 'none');
        });
    };

    var createCurve = function(options, chart) {
        createVolumeArea(options, chart);
        createPaceCurve(options, chart);
    };

    var options = {
        width: document.getElementById('pace_chart').offsetWidth,
        height: 500,
        xAxisAreaHeight: 50,
        yAxisAreaWidth: 100,
        thickness: 1,
        thicknessRatio: 5,
        volumeRatio: 5,
        textHeight: 13
    };

    options.xAxisAreaWidth = options.width - 2 * options.yAxisAreaWidth;
    options.yAxisAreaHeight = options.height - options.xAxisAreaHeight;

    options.paceRange = [ 7, 6, 5, 4, 3 ];
    options.timestampRange = [ 1461417778 ];

    for (var i = 1; i < 24; ++i) { options.timestampRange.push(options.timestampRange[0] - 2678400 * i); }
    options.timestampRange.reverse();

    options.periods = [
        [ [1399814578, 5.5, 10], [1402492978, 5.7, 15], [1405171378, 5.3, 10], [1407849778, 5.25, 12], [1410528178, 5.6, 8], [1413206578, 5.2, 15], [1415884978, 5.1, 20], [1418563378, 5.1, 13] ],
        [ [1437312178, 5.1, 14], [1439990578, 5.3, 22], [1442668978, 5.0, 25], [1445347378, 5.25, 15], [1448025778, 5.2, 10], [1450704178, 5.0, 23], [1453382578, 4.9, 21], [1456060978, 4.7, 17], [1458739378, 4.8, 10], [1461417778, 4.4, 6] ]
    ];

    var chart = d3
            .select('.pace_chart')
            .attr('width', options.width)
            .attr('height', options.height);

    options.x = d3.scale.linear()
            .range([0, options.xAxisAreaWidth])
            .domain([ options.timestampRange[0], options.timestampRange[options.timestampRange.length - 1] ]);

    options.y = d3.scale.linear()
            .range([options.height - options.xAxisAreaHeight, 0])
            .domain([ options.paceRange[options.paceRange.length - 1] - 1, options.paceRange[0] + 1 ]);

    createYAxes(options, chart);
    createXAxis(options, chart);
    createCurve(options, chart);
</script>